"use strict";$(function(){console.log("Ready.");var e=$(".gameholder"),a=$(".square"),t=$("#play"),n=$("#timerScreen"),r=$("#clickScoreScreen"),s=$("#userScoreScreen"),o=$("#timeDifferenceScreen"),d=$("#fastestClickScreen"),c=$("#averageCLickScreen"),l=$("#highscoreScreen"),g=$(".highscoreFastestClickScreen"),i=$("#highscoreAverageCLickScreen"),u=$(".badge"),b=$("#badge1"),h=$("#badge2"),f=$("#badge3"),C=$("#badge4"),m=$("#badge5"),v=$("#badge6"),S=$("#badge7"),k=$("#badge8"),x=20,y=null,M=200,p=!1,T=0,I=0,q=0,w=0,L=0,j=0,A=0,D=0,F=0,Q=0,R=0,z=[],B=0,E=0,G=function(){return R=Q-F},H=function(){return B=Math.min(z)},J=function(){return E=z.reduce(function(e,a){z.length},0)},K=function(){T>j&&(j=T,l.html(j)),B>A&&(A=B,g.html(j)),E>D&&(D=E,i.html(j)),T=0,I=0,q=0,w=0,I=0,B=0,E=0,clearInterval(y),x=20,a.removeClass("otter beaver"),u.removeClass("badge1 badge2 badge3 badge4 badge5 badge6 badge7 badge8")};t.on("click",function(){!1===p&&(K(),p=!0,P(),y=setInterval(function(){x--,n.html(x),0===x&&(clearInterval(y),p=!1)},1e3))});var N=function(){var e=Math.floor(Math.random()*a.length);return a.eq(e)},O=function(){return 99*Math.random()+1<30?"otter":"beaver"},P=function e(){setTimeout(function(){N().addTemporaryClass(O(),1e3),M=1e3*Math.random()*2+1,!0===p&&(F=$.now(),console.log(F),e())},M)},U=function(){w>5&&b.addClass("badge1"),w>10&&h.addClass("badge2"),w>20&&f.addClass("badge3"),w>50&&C.addClass("badge4"),q>5&&m.addClass("badge5"),q>10&&v.addClass("badge6"),L>10&&S.addClass("badge7"),T>j&&k.addClass("badge8")};e.on("click",function(e){Q=$.now(),console.log(Q),!0===p&&($(e.target).hasClass("beaver")?(I=20,T+=20,w+=1,U(),$(e.target).removeClass("beaver")):$(e.target).hasClass("otter")?(I=-10,T-=20,q+=1,U(),$(e.target).removeClass("otter")):(I=-5,T-=5,L+=1),r.text(I),s.text(T),z.push(R),o.text(G()),d.text(H()),c.text(J()))}),function(e){e.fn.extend({addTemporaryClass:function(a,t){var n=this;return setTimeout(function(){n.removeClass(a)},t),this.each(function(){e(this).addClass(a)})}})}(jQuery)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
