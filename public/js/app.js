"use strict";$(function(){!function(e){e.fn.extend({addTemporaryClass:function(a,t){var n=this;return setTimeout(function(){n.removeClass(a)},t),this.each(function(){e(this).addClass(a)})}})}(jQuery),console.log("Ready.");var e=$(".gameholder"),a=$(".square"),t=$("#play"),n=$("#ready"),r=$("#timerScreen"),s=$(".introduction"),d=$("#play"),c=$("#clickScoreScreen"),o=$("#userScoreScreen"),l=$("#timeDifferenceScreen"),i=$("#fastestClickScreen"),g=$("#averageCLickScreen"),u=$("#highscoreScreen"),b=$("#highscoreFastestClickScreen"),h=$("#highscoreAverageCLickScreen"),f=$(".badge"),C=$("#badge1"),m=$("#badge2"),v=$("#badge3"),S=$("#badge4"),p=$("#badge5"),k=$("#badge6"),y=$("#badge7"),x=$("#badge8"),M=20,T=null,I=200,q=!1,w=0,L=0,j=0,A=0,D=0,F=0,Q=0,R=0,z=0,B=0,E=[],G=0,H=0,J=function(){return B-z},K=function(){return G=Math.min.apply(Math,E)},N=function(){var e=E.reduce(function(e,a){return e+a},0);return H=parseInt(e/E.length)},O=function(){(G<Q||0===Q)&&(Q=G,b.html(Q)),(H<R||0===R)&&(R=H,h.html(R)),w>F&&(F=w,u.html(F)),w=0,L=0,j=0,A=0,L=0,E=[],G=0,H=0,clearInterval(T),M=20,a.removeClass("otter beaver"),f.removeClass("badge1 badge2 badge3 badge4 badge5 badge6 badge7 badge8")};n.on("click",function(){s.addClass("hide")}),d.click(function(){$(this).removeClass("pulse")}),t.on("click",function(){!1===q&&(O(),q=!0,V(),T=setInterval(function(){M--,r.html(M),0===M&&(r.addTemporaryClass("ringing",2e3),clearInterval(T),q=!1)},1e3))});var P=function(){var e=Math.floor(Math.random()*a.length);return a.eq(e)},U=function(){return 99*Math.random()+1<30?"otter":"beaver"},V=function e(){setTimeout(function(){P().addTemporaryClass(U(),1e3),I=1e3*Math.random()*1.5+1,!0===q&&(z=$.now(),e())},I)},W=function(){A>4&&C.addClass("badge1"),A>9&&m.addClass("badge2"),A>14&&v.addClass("badge3"),A>19&&S.addClass("badge4"),w>F&&p.addClass("badge5"),D>9&&k.addClass("badge6"),j>4&&y.addClass("badge7"),j>9&&x.addClass("badge8")};e.on("click",function(e){B=$.now(),q&&($(e.target).hasClass("beaver")?(L=20,w+=20,A+=1,W(),$(e.target).removeClass("beaver")):$(e.target).hasClass("otter")?(L=-10,w-=20,j+=1,W(),$(e.target).removeClass("otter")):(L=-5,w-=5,D+=1),c.text(L),o.text(w),E.push(J()),l.text(J()),i.text(K()),g.text(N()))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
